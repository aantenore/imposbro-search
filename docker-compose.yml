services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: 'controller,broker'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '0@kafka:9093'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092,CONTROLLER://:9093'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
    volumes:
      - kafka_data:/bitnami/kafka

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  # --- MODIFIED: Typesense nodes now expose their API ports ---
  typesense-1:
    image: typesense/typesense:0.25.2
    ports: # <-- ADDED
      - "8108:8108"
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
      - GLOG_logtostderr=1
    command: '--nodes=/app/typesense-nodes --api-key=${TYPESENSE_API_KEY}'
    volumes:
      - typesense_data_1:/data
      - ./typesense-nodes:/app/typesense-nodes

  typesense-2:
    image: typesense/typesense:0.25.2
    ports: # <-- ADDED
      - "8109:8108"
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
      - GLOG_logtostderr=1
    command: '--nodes=/app/typesense-nodes --api-key=${TYPESENSE_API_KEY}'
    volumes:
      - typesense_data_2:/data
      - ./typesense-nodes:/app/typesense-nodes

  typesense-3:
    image: typesense/typesense:0.25.2
    ports: # <-- ADDED
      - "8110:8108"
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
      - GLOG_logtostderr=1
    command: '--nodes=/app/typesense-nodes --api-key=${TYPESENSE_API_KEY}'
    volumes:
      - typesense_data_3:/data
      - ./typesense-nodes:/app/typesense-nodes

  query_api:
    build: ./query_api
    ports:
      - '8000:8000'
    depends_on:
      - kafka
      - redis
      - typesense-1
      - typesense-2
      - typesense-3
    env_file: .env

  indexing_service:
    build: ./indexing_service
    depends_on:
      query_api:
        condition: service_started
    env_file: .env

  admin_ui:
    build:
      context: ./admin_ui
      args:
        - INTERNAL_QUERY_API_URL=${INTERNAL_QUERY_API_URL}
    ports:
      - '3001:3000'
    depends_on:
      - query_api
    env_file: .env

  prometheus:
    image: prom/prometheus:latest
    ports: ['9090:9090']
    volumes: ['./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml']
    command: --config.file=/etc/prometheus/prometheus.yml
    depends_on: [query_api]

  grafana:
    image: grafana/grafana:latest
    ports: ['3000:3000']
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on: [prometheus]

volumes:
  kafka_data:
  redis_data:
  typesense_data_1:
  typesense_data_2:
  typesense_data_3:
